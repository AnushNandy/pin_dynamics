import numpy as np

# ---- 7 DoF Yomi ----
# M_PI = np.pi
# ROBOT_NAME = "P4.SLDASM"
# URDF_PATH = r"/home/robot/dev/dyn/ArmModels/urdfs/P4/P4_Contra-Angle_right.urdf"
# URDF_PATH_LEFT = r"/home/robot/dev/dyn/ArmModels/urdfs/P4/P4_Contra-Angle_left.urdf"
# MAX_TORQUES = np.array([140, 140, 51, 51, 14, 14, 7.7])
# KDL_CHAIN = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
#                0.37502, 0.0, 0.07664, 0.0, 0.0, 0.0,
#                -0.025, 0.0, 0.1645, 0.0, M_PI / 2.0, 0.0,
#                0.0, -0.1088, -0.045, 0.0, 0.0, -M_PI / 2.0,
#                -0.25712, 0.045, 0.21612, 0.0, 0.0, M_PI / 2.0,
#                0.092, 0.0, -0.052, 0.0, -M_PI / 2.0, -M_PI / 2.0,
#                -0.052, 0.0, 0.13375, 0.0, M_PI / 2.0, -M_PI / 2.0,
#                0.0, 0.0, 0.0987, 2.7951, 0.0, 0.0]


# LINK_NAMES_IN_KDL_ORDER = [
#     "Base",
#     "Link_0",
#     "Link_1",
#     "Link_2",
#     "Link_3",
#     "Link_4",
#     "Link_5",
#     "End_Effector"
# ]

# ACTUATED_JOINT_NAMES = [
#     "Joint_0", "Joint_1", "Joint_2", "Joint_3", "Joint_4", "Joint_5", "Joint_6"
# ]

# NUM_JOINTS = len(ACTUATED_JOINT_NAMES)

# END_EFFECTOR_FRAME_NAME = "End_Effector" 

# # Dynamic parameters should be parsed separately if needed by other modules
# LINK_DYNAMIC_PARAMETERS = {
#     "Base": {
#         'mass': 11.969,
#         'com': np.array([-0.0082097, 0.0025216, -0.14078]),
#         'inertia_tensor': np.array([
#             [0.025218, -0.0010866, 0.0012177],
#             [-0.0010866, 0.030018, 0.00020314],
#             [0.0012177, 0.00020314, 0.048411]
#         ])
#     },
#     "Link_0": {
#         'mass': 11.8138142072387,
#         'com': np.array([0.163303065400731, -4.81317444424627e-07, -0.0199129806957488]),
#         'inertia_tensor': np.array([
#             [0.022665817936265195, 8.407964966035086e-06, -0.00554305607961208],
#             [8.407964966035086e-06, 0.1719591923681325, -4.222180950686796e-07],
#             [-0.00554305607961208, -4.222180950686796e-07, 0.18162079843609566]
#         ])
#     },
#     "Link_1": {
#         'mass': 4.20821788232458,
#         'com': np.array([0.0225468852658368, 1.65637178824413e-05, 0.0268405681124005]),
#         'inertia_tensor': np.array([
#             [0.005453924976162778, -1.3161749130459695e-06, -0.00010182112684579557],
#             [-1.3161749130459695e-06, 0.00947374577056641, -1.4226030768616688e-08],
#             [-0.00010182112684579557, -1.4226030768616688e-08, 0.011576283010229317]
#         ])
#     },
#     "Link_2": {
#         'mass': 2.22462215939643,
#         'com': np.array([-7.95840576487544e-05, -0.0323353341384257, 0.0554626231739176]),
#         'inertia_tensor': np.array([
#             [0.006012004182390321, 5.74465130673749e-07, -8.09955717317447e-08],
#             [5.74465130673749e-07, 0.005492624336623406, 0.0017414014760656932],
#             [-8.09955717317447e-08, 0.0017414014760656932, 0.0036359650259675616]
#         ])
#     },
#     "Link_3": {
#         'mass': 6.98383900274924,
#         'com': np.array([-0.111386270924211, -0.064461763956462, 0.057248957436866]),
#         'inertia_tensor': np.array([
#             [0.02337229063757182, -0.026811824136969722, -0.004907570831452568],
#             [-0.026811824136969722, 0.06870234062730633, -0.002444438274402383],
#             [-0.004907570831452568, -0.002444438274402383, 0.08201720534182669]
#         ])
#     },
#     "Link_4": {
#         'mass': 1.21952641664514,
#         'com': np.array([-1.31475746999454e-05, -0.0352287665107, 0.0430677792936942]),
#         'inertia_tensor': np.array([
#             [0.0024653454111400776, 1.210836356447871e-07, -2.0387634899358056e-07],
#             [1.210836356447871e-07, 0.002167498200744964, 0.0007517713055408743],
#             [-2.0387634899358056e-07, 0.0007517713055408743, 0.001517356078455403]
#         ])
#     },
#     "Link_5": {
#         'mass': 2.97160492714599,
#         'com': np.array([8.67535010040665e-06, 0.0392187712285871, 0.061636407805382]),
#         'inertia_tensor': np.array([
#             [0.003693629897076875, -4.177749217053923e-07, -5.971171219125604e-07],
#             [-4.177749217053923e-07, 0.001913810356141183, 8.039753691931062e-05],
#             [-5.971171219125604e-07, 8.039753691931062e-05, 0.004199925242563823]
#         ])
#     },
#     "End_Effector": {
#         'mass': 1.12558655525532,
#         'com': np.array([0.00436984115892222, -0.00595567878104508, 0.0633840544783989]),
#         'inertia_tensor': np.array([
#             [0.00041787629971046627, 3.886096963661389e-05, -2.8252369277839013e-05],
#             [3.886096963661389e-05, 0.000380638221022053, 4.182189487878832e-05],
#             [-2.8252369277839013e-05, 4.182189487878832e-05, 0.000647820842857033]
#         ])
#     },
# }

# ---- 3DoF Yomi Test ----
ROBOT_NAME = "3DOF"
URDF_PATH = r"/home/robot/dev/dyn/3DOF/urdf/3DOF Yomi Assembly_Anush.urdf"
MAX_TORQUES = np.array([140, 51, 51])

LINK_NAMES_IN_KDL_ORDER = [
    "world",
    "base_link",
    "Link1",
    "Link2",
    "Link3",
    "Link4",
    "End_effector"
]

ACTUATED_JOINT_NAMES = [
    "Joint1", "Joint2", "Joint3"
]

NUM_JOINTS = len(ACTUATED_JOINT_NAMES)

END_EFFECTOR_FRAME_NAME = "End_effector"